/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.Customer.Customer;
import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Order.Order;
import Business.Restaurant.Item;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.LoginPage.LoginPageJPanel;

/**
 *
 * @author SHRISHTI
 */
public class CustomerOrderHistoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerOrderHistoryJPanel
     */
    private JPanel container;
    private UserAccount userAccount;
    private EcoSystem ecosystem;
    private DB4OUtil dB4OUtil;
    
    protected void paintComponent(Graphics g){
        Graphics2D g2d= (Graphics2D)g;
        int width=getWidth();
        int height= getHeight();
        
        Color color1= new Color(0, 105, 146);
        Color color2= new Color(162, 238, 242);
        GradientPaint gp = new GradientPaint(0,0,color1,0,height,color2);
        g2d.setPaint(gp);
        g2d.fillRect(0, 0, width, height);
    }
    
    public CustomerOrderHistoryJPanel(JPanel userProcessContainer, UserAccount account,EcoSystem ecosystem,DB4OUtil dB4OUtil) {
        initComponents();
        this.container=userProcessContainer;
        this.ecosystem=ecosystem;
        this.dB4OUtil=dB4OUtil;
        this.userAccount = account;
        //valueLabel.setText(enterprise.getName());
        jPanelOrderSummary.setVisible(false);
        populateRequestTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        refreshButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanelOrderSummary = new javax.swing.JPanel();
        jProgressBar = new javax.swing.JProgressBar();
        jLabelOrderID = new javax.swing.JLabel();
        jLabelOrderID1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableItems = new javax.swing.JTable();
        jLabelPrice = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabelOrderId4 = new javax.swing.JLabel();
        jLabelOrderDate = new javax.swing.JLabel();

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        refreshButton1.setText("Logout");
        refreshButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Order History");

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Order TimeStamp", "Order ID", "Receiver", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        jButton1.setText("Cancel Order");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("View Order");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanelOrderSummary.setBackground(new java.awt.Color(102, 102, 102));

        jProgressBar.setBorder(null);

        jLabel2.setText("Order Summary");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Order ID :");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Total Price");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("Status :");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Order Items :");

        jTableItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Item Name", "Quantity"
            }
        ));
        jScrollPane2.setViewportView(jTableItems);

        jLabelOrderId4.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 12)); // NOI18N
        jLabelOrderId4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelOrderId4.setText("Date and Time:");

        jLabelOrderDate.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 12)); // NOI18N
        jLabelOrderDate.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        javax.swing.GroupLayout jPanelOrderSummaryLayout = new javax.swing.GroupLayout(jPanelOrderSummary);
        jPanelOrderSummary.setLayout(jPanelOrderSummaryLayout);
        jPanelOrderSummaryLayout.setHorizontalGroup(
            jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOrderSummaryLayout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addGroup(jPanelOrderSummaryLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelOrderSummaryLayout.createSequentialGroup()
                        .addGroup(jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5)
                                .addComponent(jLabel4))
                            .addComponent(jLabel3))
                        .addGap(28, 28, 28)
                        .addGroup(jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(123, 123, 123)
                .addComponent(jLabelOrderId4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabelOrderDate, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1138, Short.MAX_VALUE))
            .addGroup(jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelOrderSummaryLayout.createSequentialGroup()
                    .addGap(0, 960, Short.MAX_VALUE)
                    .addComponent(jLabelOrderID)
                    .addGap(0, 960, Short.MAX_VALUE)))
            .addGroup(jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelOrderSummaryLayout.createSequentialGroup()
                    .addGap(0, 960, Short.MAX_VALUE)
                    .addComponent(jLabelOrderID1)
                    .addGap(0, 960, Short.MAX_VALUE)))
        );
        jPanelOrderSummaryLayout.setVerticalGroup(
            jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOrderSummaryLayout.createSequentialGroup()
                .addGap(207, 207, 207)
                .addGroup(jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabelOrderDate, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelOrderId4)))
                .addGap(18, 18, 18)
                .addGroup(jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(602, Short.MAX_VALUE))
            .addGroup(jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelOrderSummaryLayout.createSequentialGroup()
                    .addGap(0, 540, Short.MAX_VALUE)
                    .addComponent(jLabelOrderID)
                    .addGap(0, 540, Short.MAX_VALUE)))
            .addGroup(jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelOrderSummaryLayout.createSequentialGroup()
                    .addGap(0, 540, Short.MAX_VALUE)
                    .addComponent(jLabelOrderID1)
                    .addGap(0, 540, Short.MAX_VALUE)))
        );

        jPanelOrderSummaryLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel5, jProgressBar});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(346, 346, 346)
                                .addComponent(jLabel1))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(221, 221, 221)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(refreshButton)))
                        .addGap(0, 67, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelOrderSummary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnBack)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(refreshButton1)))))
                .addGap(28, 28, 28))
            .addGroup(layout.createSequentialGroup()
                .addGap(314, 314, 314)
                .addComponent(jButton1)
                .addGap(52, 52, 52)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton2});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(refreshButton1)
                            .addComponent(btnBack))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(refreshButton)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(jPanelOrderSummary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed

    private void refreshButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButton1ActionPerformed
        // TODO add your handling code here:
        container.removeAll();
        LoginPageJPanel lpp= new LoginPageJPanel(container, ecosystem, dB4OUtil);
        container.add("LoginPageJPanel", lpp);
        CardLayout crdLyt = (CardLayout) container.getLayout();
        crdLyt.next(container);
        dB4OUtil.storeSystem(ecosystem);
    }//GEN-LAST:event_refreshButton1ActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:
        populateRequestTable();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel)workRequestJTable.getModel();
        int rowNumber= workRequestJTable.getSelectedRow();
        if(rowNumber!=-1){
            String status= String.valueOf(dtm.getValueAt(rowNumber, 3));
            if(status.equals("Cancelled") | status.equals("Rejected") | status.equals("Delivered")){
                JOptionPane.showMessageDialog(null, "Order has already been cancelled, rejected or delivered.");
            }else if(status.equals("Pending")){
                JOptionPane.showMessageDialog(null, "Order is out for delivery and cannot be cancelled.");
            }
            else{
                Customer c=this.ecosystem.getCustomerDirectory().findCustomerByUserName(userAccount.getUsername());
                Order o=c.getCustomerAccount().getOrders().getOrderDirectory().get(dtm.getValueAt(rowNumber, 1));
                int result=JOptionPane.showConfirmDialog(null, "Confirm cancellation?");
                if(result==JOptionPane.YES_OPTION){
                    o.setStatus("Cancelled");
                    o.setDeliveryManName("-NA-");
                    JOptionPane.showMessageDialog(null, "Order cancelled.");
                    dtm.removeRow(rowNumber);
                    populateRequestTable();
                }
            }
            
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select an order to cancel.");
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel)workRequestJTable.getModel();
        int rowNumber= workRequestJTable.getSelectedRow();
        if(rowNumber!=-1){
            jPanelOrderSummary.setVisible(true);
            Customer c=this.ecosystem.getCustomerDirectory().findCustomerByUserName(userAccount.getUsername());
            Order o=c.getCustomerAccount().getOrders().getOrderDirectory().get(dtm.getValueAt(rowNumber, 1).toString());
            
            jLabel9.setText(o.getOrderId());
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MM-dd-yyyy HH:mm");
            jLabelOrderDate.setText(o.getOrderDateTime().format(formatter));
            jLabelPrice.setText(String.valueOf(o.getOrderTotal()));
            
            DefaultTableModel dtmItems= (DefaultTableModel)jTableItems.getModel();
            dtmItems.setRowCount(0);
            for(Item i : o.getItemList().keySet()){
                Object [] row = new Object[2];
                row[0]= i.getItemName();
                row[1]= o.getItemList().get(i);
                dtmItems.addRow(row);
            }
            if(o.getStatus().equals("Ordered")){
                jProgressBar.setStringPainted(true);
                jProgressBar.setForeground(Color.yellow);
//                jProgressBar.s
                jProgressBar.setValue(25);
            }
            else if(o.getStatus().equals("Accepted")){
                jProgressBar.setStringPainted(true);
                jProgressBar.setForeground(Color.orange);
                jProgressBar.setValue(50);
            }
            else if(o.getStatus().equals("Rejected")){
                jProgressBar.setStringPainted(true);
                jProgressBar.setForeground(Color.red);
                jProgressBar.setValue(1);
            }
            else if(o.getStatus().equals("Assigned")){
                jProgressBar.setStringPainted(true);
                jProgressBar.setForeground(Color.orange);
                jProgressBar.setValue(75);
            }
            else if(o.getStatus().equals("Delivered")){
                jProgressBar.setForeground(Color.green);
                jProgressBar.setValue(100);
            }
            else if(o.getStatus().equals("Cancelled")){
                jProgressBar.setForeground(Color.red);
                jProgressBar.setValue(0);
            }
            
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select an order.");
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelOrderDate;
    private javax.swing.JLabel jLabelOrderID;
    private javax.swing.JLabel jLabelOrderID1;
    private javax.swing.JLabel jLabelOrderId4;
    private javax.swing.JLabel jLabelPrice;
    private javax.swing.JPanel jPanelOrderSummary;
    private javax.swing.JProgressBar jProgressBar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableItems;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton refreshButton1;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables

    private void populateRequestTable() {
        DefaultTableModel dtm = (DefaultTableModel)workRequestJTable.getModel();
        dtm.setRowCount(0);
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MM-dd-yyyy HH:mm");
        for(String s:this.userAccount.getOrders().getOrderDirectory().keySet()){
            Object row[] = new Object[4];
            row[0]= this.userAccount.getOrders().getOrderDirectory().get(s).getOrderDateTime().format(formatter);
            row[1]=this.userAccount.getOrders().getOrderDirectory().get(s).getOrderId();
            row[2]=this.userAccount.getOrders().getOrderDirectory().get(s).getDeliveryManName();
            row[3]=this.userAccount.getOrders().getOrderDirectory().get(s).getStatus();
            dtm.addRow(row);
        }
    }
}
