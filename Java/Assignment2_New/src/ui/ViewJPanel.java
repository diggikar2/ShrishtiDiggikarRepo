/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.CarInfo;
import model.CarInfoCatalog;

/**
 *
 * @author SHRISHTI
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    private JPanel userProcessContainer;
    private CarInfoCatalog catalog;
    private CarInfo carInfo;
    
    public ViewJPanel(JPanel userProcessContainer, CarInfoCatalog catalog, CarInfo carInfo) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.catalog = catalog;
        this.carInfo = carInfo;
        
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCarInfo = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtCompanyName = new javax.swing.JTextField();
        txtNoOfSeats = new javax.swing.JTextField();
        txtSerialNo = new javax.swing.JTextField();
        txtManufactureYear = new javax.swing.JTextField();
        lblCompanyName = new javax.swing.JLabel();
        lblModelName = new javax.swing.JLabel();
        lblManufactureYear = new javax.swing.JLabel();
        lblNoOfSeats = new javax.swing.JLabel();
        lblSerialNo = new javax.swing.JLabel();
        txtModelName = new javax.swing.JTextField();
        lblAvailability = new javax.swing.JLabel();
        txtAvailability = new javax.swing.JTextField();
        lblCity = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        txtCertificateExpirationDate = new javax.swing.JTextField();
        lblAvailability1 = new javax.swing.JLabel();
        btnSaveChanges = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        lblTitle.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("View All Car Details");

        tblCarInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Company", "Model", "Status", "Created/Updated On"
            }
        ));
        jScrollPane1.setViewportView(tblCarInfo);

        btnView.setBackground(new java.awt.Color(255, 153, 204));
        btnView.setForeground(new java.awt.Color(255, 255, 255));
        btnView.setText("View and Edit");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 153, 204));
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txtCompanyName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtCompanyName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCompanyNameActionPerformed(evt);
            }
        });

        txtNoOfSeats.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtNoOfSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoOfSeatsActionPerformed(evt);
            }
        });

        txtSerialNo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtSerialNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSerialNoActionPerformed(evt);
            }
        });

        txtManufactureYear.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtManufactureYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtManufactureYearActionPerformed(evt);
            }
        });

        lblCompanyName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblCompanyName.setText("Company Name :");

        lblModelName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblModelName.setText("Model Name :");

        lblManufactureYear.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblManufactureYear.setText("Manufacture Year :");

        lblNoOfSeats.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblNoOfSeats.setText("No. of Seats :");

        lblSerialNo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblSerialNo.setText("Serial Number :");

        txtModelName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtModelName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtModelNameActionPerformed(evt);
            }
        });

        lblAvailability.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblAvailability.setText("Availability :");

        txtAvailability.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtAvailability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAvailabilityActionPerformed(evt);
            }
        });

        lblCity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblCity.setText("City :");

        txtCity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCityActionPerformed(evt);
            }
        });

        txtCertificateExpirationDate.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtCertificateExpirationDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCertificateExpirationDateActionPerformed(evt);
            }
        });

        lblAvailability1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblAvailability1.setText("Certificate Expiration Date");

        btnSaveChanges.setBackground(new java.awt.Color(255, 153, 204));
        btnSaveChanges.setForeground(new java.awt.Color(255, 255, 255));
        btnSaveChanges.setText("Save Changes");
        btnSaveChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveChangesActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 153, 204));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("<< Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(268, 268, 268)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnView)
                                .addGap(188, 188, 188)
                                .addComponent(btnDelete)
                                .addGap(14, 14, 14))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblCity)
                                    .addGap(88, 88, 88)
                                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblSerialNo)
                                        .addComponent(lblNoOfSeats)
                                        .addComponent(lblCompanyName)
                                        .addComponent(lblManufactureYear)
                                        .addComponent(lblModelName)
                                        .addComponent(lblAvailability))
                                    .addGap(88, 88, 88)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtModelName, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtCompanyName, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtNoOfSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtSerialNo, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtManufactureYear, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblAvailability1)
                                    .addGap(88, 88, 88)
                                    .addComponent(txtCertificateExpirationDate, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(458, 458, 458)
                        .addComponent(btnSaveChanges)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(191, 191, 191)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 266, Short.MAX_VALUE)
                .addComponent(lblTitle)
                .addGap(316, 316, 316))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete, btnView});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitle)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnView))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCompanyName)
                    .addComponent(txtCompanyName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblModelName)
                    .addComponent(txtModelName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblManufactureYear)
                    .addComponent(txtManufactureYear, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNoOfSeats)
                    .addComponent(txtNoOfSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSerialNo)
                    .addComponent(txtSerialNo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAvailability)
                    .addComponent(txtAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAvailability1)
                    .addComponent(txtCertificateExpirationDate, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnSaveChanges)
                .addContainerGap(136, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtCompanyNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCompanyNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCompanyNameActionPerformed

    private void txtNoOfSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoOfSeatsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoOfSeatsActionPerformed

    private void txtSerialNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSerialNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSerialNoActionPerformed

    private void txtManufactureYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtManufactureYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtManufactureYearActionPerformed

    private void txtModelNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtModelNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtModelNameActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblCarInfo.getSelectedRow();
        
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to delete!");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblCarInfo.getModel();
        CarInfo selectedCar = (CarInfo) model.getValueAt(selectedRowIndex, 0);
//        catalog.deleteCar(selectedCar);
        selectedCar.setStatus("Deleted");
        selectedCar.setCreatedOn(new Date());
        JOptionPane.showMessageDialog(this, "Car information deleted!");
        
        populateTable();
        
        txtCompanyName.setText("");
        txtModelName.setText("");
        txtManufactureYear.setText("");
        txtNoOfSeats.setText("");
        txtSerialNo.setText("");
        txtAvailability.setText("");
        txtCity.setText("");
        txtCertificateExpirationDate.setText("");
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblCarInfo.getSelectedRow();
        
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to view!");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblCarInfo.getModel();
        CarInfo selectedCar = (CarInfo) model.getValueAt(selectedRowIndex, 0);
        
        txtCompanyName.setText(selectedCar.getCompany());
        txtModelName.setText(String.valueOf(selectedCar.getModel()));
        txtManufactureYear.setText(String.valueOf(selectedCar.getManufactureYear()));
        txtNoOfSeats.setText(String.valueOf(selectedCar.getNoOfSeats()));
        txtSerialNo.setText(selectedCar.getSerialNo());
        txtAvailability.setText(selectedCar.getAvailabilityStatus());
        txtCity.setText(selectedCar.getCity());
        txtCertificateExpirationDate.setText(String.valueOf(selectedCar.getCertificateExpirationDate()));
    }//GEN-LAST:event_btnViewActionPerformed

    private void txtAvailabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAvailabilityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAvailabilityActionPerformed

    private void txtCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCityActionPerformed

    private void txtCertificateExpirationDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCertificateExpirationDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCertificateExpirationDateActionPerformed

    private void btnSaveChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveChangesActionPerformed
        // TODO add your handling code here:
        if (txtCompanyName.getText().isBlank() || txtModelName.getText().isBlank() || txtManufactureYear.getText().isEmpty() || txtNoOfSeats.getText().isEmpty() ||
                txtSerialNo.getText().isBlank() || txtAvailability.getText().isEmpty() || txtCity.getText().isEmpty() || txtCertificateExpirationDate.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mandatory fields cannot be blank!!");
        } else if (!Pattern.matches("\\d{5}", txtModelName.getText())){
            JOptionPane.showMessageDialog(this, "Model Number should be numeric and 5 digit only!");
        } else if (!Pattern.matches("[0-9]{4}", txtManufactureYear.getText())){
            JOptionPane.showMessageDialog(this, "Year of manufacture should be 4 digits only!");
        } else if (!Pattern.matches("[0-9]{1}", txtNoOfSeats.getText())){
            JOptionPane.showMessageDialog(this, "Number of seats should be numeric and cannot be greater than 9!");
        } else if (!Pattern.matches("[a-zA-Z{2}0-9]{6}", txtSerialNo.getText())){
            JOptionPane.showMessageDialog(this, "Serial Number is in incorrect format!");
        } else if (!Pattern.matches("([a-zA-Z',.-]+( [a-zA-Z',.-]+)*){2,30}", txtCity.getText())){
            JOptionPane.showMessageDialog(this, "City should be aplhabetic only");
        } else if (!Pattern.matches("[0-9]{4}", txtManufactureYear.getText())) {
            JOptionPane.showMessageDialog(this, "Year of certificate expiration should be 4 digits only!");
        } else {    
        int selectedRowIndex = tblCarInfo.getSelectedRow();
        
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to edit!");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblCarInfo.getModel();
        CarInfo selectedCar = (CarInfo) model.getValueAt(selectedRowIndex, 0);
        
        String newCompany = txtCompanyName.getText();
        int newModel = Integer.parseInt(txtModelName.getText());
        int newManufactureYear = Integer.parseInt(txtManufactureYear.getText());
        int newNoOfSeats = Integer.parseInt(txtNoOfSeats.getText());
        String newSerialNo = txtSerialNo.getText();
//        int newAvailability = Integer.parseInt(txtAvailability.getText());
        String newCity = txtCity.getText();
        String newDate = txtCertificateExpirationDate.getText();
        int year = Integer.parseInt(txtCertificateExpirationDate.getText());
        String status = txtAvailability.getText();
        try {
        CarInfo updatedCar = new CarInfo();
        updatedCar.setCompany(newCompany);
        updatedCar.setModel(newModel);
        updatedCar.setManufactureYear(newManufactureYear);
        updatedCar.setNoOfSeats(newNoOfSeats);
        updatedCar.setSerialNo(newSerialNo);
        updatedCar.setAvailabilityStatus(status);
        updatedCar.setCity(newCity);
        updatedCar.setCertificateExpirationDate(year);

        updatedCar.setCreatedOn(new Date());
        updatedCar.setStatus("Updated");
        catalog.updateCar(selectedCar, updatedCar);
        
        
       JOptionPane.showMessageDialog(this, "Changes saved!");
       
       populateTable();
       
       txtCompanyName.setText("");
       txtModelName.setText("");
       txtManufactureYear.setText("");
       txtNoOfSeats.setText("");
       txtSerialNo.setText("");
       txtAvailability.setText("");
       txtCity.setText("");
       txtAvailability.setText("");
       txtCertificateExpirationDate.setText("");
        } catch(Exception e)  {
            JOptionPane.showMessageDialog(this, newDate);
        }
//        CarInfo updatedCar = new CarInfo();
//        updatedCar.setCompany(newCompany);
//        updatedCar.setModel(newModel);
//        updatedCar.setManufactureYear(newManufactureYear);
//        updatedCar.setNoOfSeats(newNoOfSeats);
//        updatedCar.setSerialNo(newSerialNo);
//        updatedCar.setAvailability(newAvailability);
//        updatedCar.setCity(newCity);
//        updatedCar.setCertificateExpirationDate(date1);
        
//       catalog.updateCar(selectedCar, updatedCar);
//        
//       JOptionPane.showMessageDialog(this, "Changes saved!");
//       
//       populateTable();
//       
//       txtCompanyName.setText("");
//       txtModelName.setText("");
//       txtManufactureYear.setText("");
//       txtNoOfSeats.setText("");
//       txtSerialNo.setText("");
//       txtAvailability.setText("");
//       txtCity.setText("");
//       txtAvailability.setText("");
//       txtCertificateExpirationDate.setText("");
        }
    }//GEN-LAST:event_btnSaveChangesActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSaveChanges;
    private javax.swing.JButton btnView;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAvailability;
    private javax.swing.JLabel lblAvailability1;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCompanyName;
    private javax.swing.JLabel lblManufactureYear;
    private javax.swing.JLabel lblModelName;
    private javax.swing.JLabel lblNoOfSeats;
    private javax.swing.JLabel lblSerialNo;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblCarInfo;
    private javax.swing.JTextField txtAvailability;
    private javax.swing.JTextField txtCertificateExpirationDate;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCompanyName;
    private javax.swing.JTextField txtManufactureYear;
    private javax.swing.JTextField txtModelName;
    private javax.swing.JTextField txtNoOfSeats;
    private javax.swing.JTextField txtSerialNo;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblCarInfo.getModel();
        
        model.setRowCount(0);
        for(CarInfo ci : catalog.getCatalog()){
            Object[] row = new Object[8];
            row[0] = ci;
            row[1] = ci.getModel();
            row[2] = ci.getStatus();
            row[3] = ci.getCreatedOn();
//            row[4] = ci.getSerialNo();
//            row[5] = ci.getAvailability();
//            row[6] = ci.getCity();
//            row[7] = ci.getCertificateExpirationDate();
            
            model.addRow(row);
        }
    }
}
